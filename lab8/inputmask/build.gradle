/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'pnguyen' at '7/30/18 6:20 PM' with Gradle 3.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/


buildscript {
    dependencies {
        classpath fileTree(dir: 'libs', include: '*.jar')
    }
}

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'com.github.spotbugs' version '1.6.2'    
}

repositories {
    jcenter()
}

dependencies {
    runtime fileTree(dir: 'libs', include: '*.jar')
    compile fileTree(dir: 'libs', include: '*.jar')
    compile group: 'junit', name: 'junit', version: '4.+'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

shadowJar {
    baseName = 'inputmask'
}



/* Spot Bugs Configuration */

spotbugs {
    ignoreFailures = true
    toolVersion = "3.1.3"
    sourceSets=[sourceSets.main]
    excludeFilter = file("config/spotbugs/excludeFilter.xml")
    reportsDir = file("$project.buildDir/reports/spotbugs")
    effort = "max"
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled false
        html.enabled true
      }
}

/* Smart Smells Configuration */

repositories {
    maven {
        url  "http://dl.bintray.com/arturbosch/code-analysis"
    }
}

configurations {
    smartsmells
}

task smartsmells(type: JavaExec) {
    main = "io.gitlab.arturbosch.smartsmells.Main"
    classpath = configurations.smartsmells
    def input = "$project.projectDir.absolutePath/src/main"
    def baseDir = "$project.projectDir/build/reports/"
    def output = "$baseDir/smells/smartsmells.xml"
    def params = [ '-i', input, '-o', output, '-fs', '-f', ".*/test/.*"]
    args(params)
}

dependencies {
    smartsmells 'io.gitlab.arturbosch.smartsmells:SmartSmells:1.0.0.RC8'
}

